{"ast":null,"code":"import _slicedToArray from \"D:\\\\Drum-Machine\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Drum-Machine\\\\src\\\\components\\\\Drum.jsx\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport drums from \"./drums\";\n\nfunction Drum() {\n  // declare a state variable drumsound with initial value empty string\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        drumSound = _useState2[0],\n        setdrumSound = _useState2[1];\n\n  const audioElement = useRef(null);\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        audios = _useState4[0],\n        setAudios = _useState4[1]; // declare a state variable power with initial value false\n\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        power = _useState6[0],\n        setPower = _useState6[1];\n\n  useEffect(() => {\n    // console.log(audioElement.current);\n    console.log(drumSound);\n  }, [drumSound]); // declare function handleKeyDown to keydown events\n\n  /*  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyDown);\n  }) */\n\n  const handleClick = event => {\n    if (power) {\n      let clickedButton = event.target.id;\n      event.target.children[0].play();\n      setdrumSound(clickedButton);\n      /* \n      drums.forEach(elem => {\n        if (elem.name === clickedButton) {\n          let audio = new Audio(elem.src);\n          audio.play();\n          document.getElementById(elem.name).classList.add(\"pressed\");\n          setTimeout(() => {\n            document.getElementById(elem.name).classList.remove(\"pressed\");\n          }, 1000)\n        }\n        return () => clearTimeout();\n      });\n      setdrumSound(clickedButton);\n      } */\n    }\n  }; // const handleKeyDown = (event) => {\n  //   if (power) {\n  //     let clickedButton;\n  //     let pressedKey = event.keyCode;\n  //     drums.forEach((elem) => {\n  //       if (elem.keycode == pressedKey) {\n  //         let audio = new Audio(elem.src);\n  //         audio.play();\n  //         clickedButton = elem.name;\n  //         document.getElementById(elem.name).classList.add(\"pressed\");\n  //         setTimeout(() => {\n  //           document.getElementById(elem.name).classList.remove(\"pressed\");\n  //         }, 1000);\n  //       }\n  //       return () => clearTimeout();\n  //     });\n  //     setdrumSound(clickedButton);\n  //   }\n  // };\n\n\n  const handlePowerOn = () => {\n    setPower(true);\n  };\n\n  const handlePowerOff = () => {\n    setPower(false);\n    setdrumSound(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \" \", drumSound, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, drums.map(elem => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onClick: handleClick,\n      key: elem.name,\n      id: elem.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, \" \", elem.letter, \" \", /*#__PURE__*/React.createElement(\"audio\", {\n      id: \"beep\",\n      ref: audioElement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"source\", {\n      src: elem.src,\n      type: \"audio/mpeg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    })));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"power\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"power-header\",\n    style: {\n      backgroundColor: power ? \"chartreuse\" : \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, \"Power\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handlePowerOn,\n    className: \"power-on\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, \" \", \"On\", \" \"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handlePowerOff,\n    className: \"power-off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, \" \", \"Off\", \" \"))));\n}\n\nexport default Drum;","map":{"version":3,"sources":["D:/Drum-Machine/src/components/Drum.jsx"],"names":["React","useState","useEffect","useRef","drums","Drum","drumSound","setdrumSound","audioElement","audios","setAudios","power","setPower","console","log","handleClick","event","clickedButton","target","id","children","play","handlePowerOn","handlePowerOff","map","elem","name","letter","src","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport drums from \"./drums\";\n\nfunction Drum() {\n  // declare a state variable drumsound with initial value empty string\n  const [drumSound, setdrumSound] = useState(\"\");\n  const audioElement = useRef(null);\n  const [audios, setAudios] = useState(\"\")\n\n  // declare a state variable power with initial value false\n  const [power, setPower] = useState(false);\n\n  useEffect(() => {\n    // console.log(audioElement.current);\n    console.log(drumSound)\n  }, [drumSound]);\n\n  // declare function handleKeyDown to keydown events\n  /*  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyDown);\n  }) */ const handleClick = (\n    event\n  ) => {\n    if (power) {\n      let clickedButton = event.target.id;\n      event.target.children[0].play()\n      setdrumSound(clickedButton);\n      \n      /* \n      drums.forEach(elem => {\n        if (elem.name === clickedButton) {\n          let audio = new Audio(elem.src);\n          audio.play();\n          document.getElementById(elem.name).classList.add(\"pressed\");\n          setTimeout(() => {\n            document.getElementById(elem.name).classList.remove(\"pressed\");\n          }, 1000)\n        }\n        return () => clearTimeout();\n      });\n      setdrumSound(clickedButton);\n    } */\n    }\n  };\n\n  // const handleKeyDown = (event) => {\n  //   if (power) {\n  //     let clickedButton;\n  //     let pressedKey = event.keyCode;\n\n  //     drums.forEach((elem) => {\n  //       if (elem.keycode == pressedKey) {\n  //         let audio = new Audio(elem.src);\n  //         audio.play();\n  //         clickedButton = elem.name;\n  //         document.getElementById(elem.name).classList.add(\"pressed\");\n  //         setTimeout(() => {\n  //           document.getElementById(elem.name).classList.remove(\"pressed\");\n  //         }, 1000);\n  //       }\n  //       return () => clearTimeout();\n  //     });\n  //     setdrumSound(clickedButton);\n  //   }\n  // };\n\n  const handlePowerOn = () => {\n    setPower(true);\n  };\n\n  const handlePowerOff = () => {\n    setPower(false);\n    setdrumSound(\"\");\n  };\n\n  return (\n    <div className=\"wrapper2\">\n      <div className=\"display\"> {drumSound} </div>\n      <div className=\"container\">\n        {drums.map((elem) => {\n          return (\n            <div onClick={handleClick} key={elem.name} id={elem.name}>\n              {\" \"}\n              {elem.letter}{\" \"}\n              <audio id=\"beep\" ref={audioElement}>\n                <source src={elem.src} type=\"audio/mpeg\" />\n              </audio>\n            </div>\n          );\n        })}\n        {/* <div class=\"drum-master row\">\n           \n          <div onClick={handleClick}\n            className=\"drum-pad col-sm-3\"\n            id=\"Snare\"\n          >\n            Q\n          </div>\n          <div\n            onClick={handleClick}\n            class=\"drum-pad col-sm-3\"\n            id=\"Bass 1\">\n            W\n          </div>\n          <div\n            onClick={handleClick}\n            class=\"drum-pad col-sm-3\"\n            id=\"Bongo\">\n            E\n          </div>\n        </div>\n\n        <div class=\"drum-master row\">\n          <div\n            onClick={handleClick}\n            class=\"drum-pad col-sm-3\"\n            id=\"Tom Tom\">\n            A\n          </div>\n          <div onClick={handleClick}\n            class=\"drum-pad col-sm-3\"\n            id=\"Bass 3\">\n            S\n          </div>\n          <div\n            onClick={handleClick}\n            class=\"drum-pad col-sm-3\"\n            id=\"Shotgun\">\n            D\n          </div>\n        </div>\n\n        <div class=\"drum-master row\">\n          <div\n            onClick={handleClick}\n            id=\"Kick Hat\"\n            class=\"drum-pad col-sm-3\">\n            Z\n        </div>\n          <div\n            onClick={handleClick}\n            class=\"drum-pad col-sm-3\"\n            id=\"Hit\">\n            X\n          </div>\n          <div\n            onClick={handleClick}\n            class=\"drum-pad col-sm-3\"\n            id=\"Closed\">\n            C\n          </div>\n        </div> */}\n\n        <div className=\"power\">\n          <div\n            className=\"power-header\"\n            style={{ backgroundColor: power ? \"chartreuse\" : \"red\" }}\n          >\n            Power\n          </div>\n          <button onClick={handlePowerOn} className=\"power-on\">\n            {\" \"}\n            On{\" \"}\n          </button>\n          <button onClick={handlePowerOff} className=\"power-off\">\n            {\" \"}\n            Off{\" \"}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Drum;\n"]},"metadata":{},"sourceType":"module"}