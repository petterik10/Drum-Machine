{"ast":null,"code":"import _slicedToArray from \"D:\\\\Drum-Machine\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Drum-Machine\\\\src\\\\components\\\\Drum.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport drums from \"./drums\";\n\nfunction Drum() {\n  // declare a state variable drumsound with initial value empty string\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        drumSound = _useState2[0],\n        setdrumSound = _useState2[1];\n  /* const audioElement = useRef(null);\n  const [audios, setAudios] = useState(\"\"); */\n  // declare a state variable power with initial value false\n\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        power = _useState4[0],\n        setPower = _useState4[1];\n\n  useEffect(() => {\n    // console.log(audioElement.current);\n    console.log(drumSound);\n  }, [drumSound]);\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }); // useEffect(() => {\n  //     audios.play();\n  // }, [audios]);\n  // declare function handleKeyDown to keydown events\n\n  /*  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyDown);\n  }) */\n\n  const handleClick = event => {\n    if (power) {\n      let clickedButton = event.target.id; // event.target.children[0].play()\n\n      setdrumSound(clickedButton);\n      event.target.children[0].play();\n      /* setAudios(event.target.children[0]); */\n\n      /* \n      drums.forEach(elem => {\n        if (elem.name === clickedButton) {\n          let audio = new Audio(elem.src);\n          audio.play();\n          document.getElementById(elem.name).classList.add(\"pressed\");\n          setTimeout(() => {\n            document.getElementById(elem.name).classList.remove(\"pressed\");\n          }, 1000)\n        }\n        return () => clearTimeout();\n      });\n      setdrumSound(clickedButton);\n      } */\n    }\n  };\n\n  const handleKeyDown = event => {\n    if (power) {\n      const options = document.getElementsByClassName(\"container\")[0];\n      console.log(options.children[i]);\n      /*  let pressedKey = event.keyCode;\n      console.log(pressedKey)\n      drums.forEach(elem => {\n        if(elem.)\n      }) */\n\n      /*    drums.forEach((elem) => {\n        if (elem.keycode == pressedKey) {\n          let audio = new Audio(elem.src);\n          audio.play();\n          clickedButton = elem.name;\n          document.getElementById(elem.name).classList.add(\"pressed\");\n          setTimeout(() => {\n            document.getElementById(elem.name).classList.remove(\"pressed\");\n          }, 1000);\n        }\n        return () => clearTimeout();\n      });\n      setdrumSound(clickedButton); */\n    }\n  };\n\n  const handlePowerOn = () => {\n    setPower(true);\n  };\n\n  const handlePowerOff = () => {\n    setPower(false);\n    setdrumSound(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, \" \", drumSound, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, drums.map(elem => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onClick: handleClick,\n      key: elem.name,\n      id: elem.name,\n      keycode: elem.keycode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, \" \", elem.letter, \" \", /*#__PURE__*/React.createElement(\"audio\", {\n      id: \"beep\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"source\", {\n      src: elem.src,\n      type: \"audio/mpeg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    })));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"power\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"power-header\",\n    style: {\n      backgroundColor: power ? \"chartreuse\" : \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, \"Power\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handlePowerOn,\n    className: \"power-on\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, \" \", \"On\", \" \"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handlePowerOff,\n    className: \"power-off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, \" \", \"Off\", \" \"))));\n}\n\nexport default Drum;","map":{"version":3,"sources":["D:/Drum-Machine/src/components/Drum.jsx"],"names":["React","useState","useEffect","drums","Drum","drumSound","setdrumSound","power","setPower","console","log","document","addEventListener","handleKeyDown","removeEventListener","handleClick","event","clickedButton","target","id","children","play","options","getElementsByClassName","i","handlePowerOn","handlePowerOff","map","elem","name","keycode","letter","src","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport drums from \"./drums\";\n\nfunction Drum() {\n  // declare a state variable drumsound with initial value empty string\n  const [drumSound, setdrumSound] = useState(\"\");\n  /* const audioElement = useRef(null);\n  const [audios, setAudios] = useState(\"\"); */\n\n  // declare a state variable power with initial value false\n  const [power, setPower] = useState(false);\n\n  useEffect(() => {\n    // console.log(audioElement.current);\n    console.log(drumSound);\n  }, [drumSound]);\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  });\n\n  // useEffect(() => {\n  //     audios.play();\n  // }, [audios]);\n\n  // declare function handleKeyDown to keydown events\n  /*  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyDown);\n  }) */ const handleClick = (\n    event\n  ) => {\n    if (power) {\n      let clickedButton = event.target.id;\n      // event.target.children[0].play()\n      setdrumSound(clickedButton);\n      event.target.children[0].play();\n      /* setAudios(event.target.children[0]); */\n\n      /* \n      drums.forEach(elem => {\n        if (elem.name === clickedButton) {\n          let audio = new Audio(elem.src);\n          audio.play();\n          document.getElementById(elem.name).classList.add(\"pressed\");\n          setTimeout(() => {\n            document.getElementById(elem.name).classList.remove(\"pressed\");\n          }, 1000)\n        }\n        return () => clearTimeout();\n      });\n      setdrumSound(clickedButton);\n    } */\n    }\n  };\n\n  const handleKeyDown = (event) => {\n    if (power) {\n      const options = document.getElementsByClassName(\"container\")[0];\n      console.log(options.children[i])\n\n      /*  let pressedKey = event.keyCode;\n      console.log(pressedKey)\n      drums.forEach(elem => {\n        if(elem.)\n      }) */\n\n      /*    drums.forEach((elem) => {\n        if (elem.keycode == pressedKey) {\n          let audio = new Audio(elem.src);\n          audio.play();\n          clickedButton = elem.name;\n          document.getElementById(elem.name).classList.add(\"pressed\");\n          setTimeout(() => {\n            document.getElementById(elem.name).classList.remove(\"pressed\");\n          }, 1000);\n        }\n        return () => clearTimeout();\n      });\n      setdrumSound(clickedButton); */\n    }\n  };\n\n  const handlePowerOn = () => {\n    setPower(true);\n  };\n\n  const handlePowerOff = () => {\n    setPower(false);\n    setdrumSound(\"\");\n  };\n\n  return (\n    <div className=\"wrapper2\">\n      <div className=\"display\"> {drumSound} </div>\n      <div className=\"container\">\n        {drums.map((elem) => {\n          return (\n            <div\n              onClick={handleClick}\n              key={elem.name}\n              id={elem.name}\n              keycode={elem.keycode}\n            >\n              {\" \"}\n              {elem.letter}{\" \"}\n              <audio id=\"beep\">\n                <source src={elem.src} type=\"audio/mpeg\" />\n              </audio>\n            </div>\n          );\n        })}\n        {/* <div class=\"drum-master row\">\n           \n          <div onClick={handleClick}\n            className=\"drum-pad col-sm-3\"\n            id=\"Snare\"\n          >\n            Q\n          </div>\n          <div\n            onClick={handleClick}\n            class=\"drum-pad col-sm-3\"\n            id=\"Bass 1\">\n            W\n          </div>\n          <div\n            onClick={handleClick}\n            class=\"drum-pad col-sm-3\"\n            id=\"Bongo\">\n            E\n          </div>\n        </div>\n\n        <div class=\"drum-master row\">\n          <div\n            onClick={handleClick}\n            class=\"drum-pad col-sm-3\"\n            id=\"Tom Tom\">\n            A\n          </div>\n          <div onClick={handleClick}\n            class=\"drum-pad col-sm-3\"\n            id=\"Bass 3\">\n            S\n          </div>\n          <div\n            onClick={handleClick}\n            class=\"drum-pad col-sm-3\"\n            id=\"Shotgun\">\n            D\n          </div>\n        </div>\n\n        <div class=\"drum-master row\">\n          <div\n            onClick={handleClick}\n            id=\"Kick Hat\"\n            class=\"drum-pad col-sm-3\">\n            Z\n        </div>\n          <div\n            onClick={handleClick}\n            class=\"drum-pad col-sm-3\"\n            id=\"Hit\">\n            X\n          </div>\n          <div\n            onClick={handleClick}\n            class=\"drum-pad col-sm-3\"\n            id=\"Closed\">\n            C\n          </div>\n        </div> */}\n\n        <div className=\"power\">\n          <div\n            className=\"power-header\"\n            style={{ backgroundColor: power ? \"chartreuse\" : \"red\" }}\n          >\n            Power\n          </div>\n          <button onClick={handlePowerOn} className=\"power-on\">\n            {\" \"}\n            On{\" \"}\n          </button>\n          <button onClick={handlePowerOff} className=\"power-off\">\n            {\" \"}\n            Off{\" \"}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Drum;\n"]},"metadata":{},"sourceType":"module"}